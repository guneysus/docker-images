worker_processes 2;

events {
  worker_connections 1024;
}

http {
  access_log off;

  keepalive_timeout 65;
  resolver 8.8.8.8;

  lua_ssl_trusted_certificate "root-certs.pem";
  lua_ssl_verify_depth 2;
  lua_package_path "$prefix/lualib/?.lua;;";

  lua_shared_dict locks 1M;
  lua_shared_dict cache 10M;

  # see https://github.com/openresty/lua-resty-core
  init_by_lua '
    require "resty.core"
  ';

  server {
    listen 8080;
    default_type text/html;

    location = / {
      content_by_lua '
        ngx.say "<html><body>Hello from Lua-land! Try <a href=\\"/show-org/ficusio\\">this link</a> :)"
      ';
    }

    # /show-org/orgname[?nocache] - show GitHib organization members
    #
    location ~* ^/show-org/([\w\d]+)/?$ {
      content_by_lua '
        local orgname = ngx.var[1]
        local nocache = ngx.req.get_uri_args().nocache ~= nil
        local gh, template = require "example.gh", require "resty.template"
        local org, err, status
        if nocache then
          org, err, status = gh.getOrg(orgname)
        else
          org, err, status = gh.getOrgCached(orgname)
        end
        if err then
          ngx.status = status or 500
          template.render("error.html", { message = err })
        else
          template.render("org-members.html", { org = org })
        end
      ';
    }
  }
}
